
let answers = Reviews.map(el => el.answers)
answers.map(answer => answer[1]) // get each question number 2 which the index in arrray are 1
answers.map(answer => answer[ answer.findIndex(el => el.question === 2) ])
answers.map(answer => answer[ answer.findIndex(el => el.question === 4) ])

/////////////////////////////////////////////////////////////////////////////////////
arr[0].choices.map(el => el.text)

arr[0].choices.filter(el => el.id === 4)
arr[0].choices.filter(el => el.text === 'Good')
arr[0].choices.filter(el => el.text !== 'Good')//isn't related but it mean the others not this object



///////// date fun

    //    arr.map(el => {
    //   const date = new Date(el);
    //   const [month, day, year] = [date.getMonth(), date.getDate(), date.getFullYear()];
    //   const dateFormat = `${year}-${month + 1}-${day}`;
    //   return dateFormat
    // })

//====================== date-fns library =============================//

format(new Date(2014, 1, 11), 'yyyy-MM-dd')
//=> '2014-02-11'

const dates = [
  new Date(1995, 6, 2),
  new Date(1987, 1, 11),
  new Date(1989, 6, 10),
]
dates.sort(compareAsc)
//=> [
//   Wed Feb 11 1987 00:00:00,
//   Mon Jul 10 1989 00:00:00,
//   Sun Jul 02 1995 00:00:00
// ]

//====================== date-fns library =============================//


import { IUtils } from '@date-io/core/IUtils';
info Direct dependencies
├─ @date-io/date-fns@1.3.13
└─ date-fns@2.23.0
info All dependencies
├─ @date-io/core@1.3.13
├─ @date-io/date-fns@1.3.13
└─ date-fns@2.23.0
Done in 85.07s.